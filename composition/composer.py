#import rules file

from progression import Progression
from chord import Chord
#make class
class Composer:
    
    #init function
    def __init__(self,pitches, rules):
        self.pitches=pitches
        self.rules = rules # a list of rule 
        self.progressions = [] # holds instances of progressions

        # self.currentPitchIndex = 0


    #generate chord progression function
    def makeChordProgression(self):        
        pitchIdx = 0
        activeProgressions = []
        while pitchIdx < len(self.pitches):
            nextProgressions = []
            if len(activeProgressions) == 0:
                for rule in self.rules:
                    possibleChords = rule.getPossibleChords(
                        pitchIdx=pitchIdx,
                        pitch=self.pitches[pitchIdx],
                    )
                    for chord in possibleChords:
                        nextProgressions.append(Progression([chord]))
            else:
                for progression in activeProgressions:
                    for rule in self.rules:
                        possibleChords = rule.getPossibleChords(
                            pitchIdx=pitchIdx,
                            pitch=self.pitches[pitchIdx],
                            progression=progression
                        )
                    for chord in possibleChords:
                        nextProgressions.append(progression.append(chord))

            activeProgressions = nextProgressions
            pitchIdx += 1
            # self.getChord(self.ruleSet.getPitch(),self.ruleSet.getPreviousChord())
        return self.progressions

    #helper function for first chord
    def getFirstChord(self,pitchIn):
        newChord = pitchIn #CHANGE THIS LATER (PLACEHOLDER)
        self.progression.append(newChord)
        print(self.progression)
        self.currentPitchIndex+=1


    #helper function to generate a chord (calls the rule class to get chords)
    def getChord(self,pitchIn,previousChord):
        newChord = self.ruleSet.getPossibleChords(pitchIn,previousChord)
        self.progression.append(newChord)
        print()
        print(self.progression)
        self.currentPitchIndex+=1


    #function to show the current chord progression generated by the composer to the user (mainly for testing purposes)
    def showChordsList(self):
        print(self.progression)


    #function to output the chord progression chosen by the user
    def outputChords(self,fileFormat):
        pass
    

   


#testing
# obj = composer(["A","B","C","D","E","F"])
# obj.makeChordProgression()